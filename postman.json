{
	"info": {
		"_postman_id": "85c8664d-a0ce-4201-a863-d0d68710858c",
		"name": "Career API",
		"description": "The Career API documentation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21699624",
		"_collection_link": "https://crimson-resonance-923363.postman.co/workspace/Team-Workspace~30dbd4b3-49b2-44a6-8806-1c3f59c68a05/collection/21699624-85c8664d-a0ce-4201-a863-d0d68710858c?action=share&source=collection_link&creator=21699624"
	},
	"item": [
		{
			"name": "article",
			"item": [
				{
					"name": "create",
					"item": [
						{
							"name": "Create a new article",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "<string>",
											"description": "(Required) The title of the article",
											"type": "text"
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "(Required) The description of the article",
											"type": "text"
										},
										{
											"key": "image",
											"description": "(Required) The image file of the article",
											"type": "file",
											"src": []
										},
										{
											"key": "minutesRead",
											"value": "<integer>",
											"description": "(Required) Minutes to read the article",
											"type": "text"
										},
										{
											"key": "generalInfo",
											"value": "<string>",
											"description": "(Required) General information about the article",
											"type": "text"
										},
										{
											"key": "hashtags",
											"value": "<string>",
											"description": "(Required) List of hashtags associated with the article, as a comma-separated string",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/article/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"article",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "Article created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "<string>",
													"description": "(Required) The title of the article",
													"type": "text"
												},
												{
													"key": "description",
													"value": "<string>",
													"description": "(Required) The description of the article",
													"type": "text"
												},
												{
													"key": "image",
													"description": "(Required) The image file of the article",
													"type": "file",
													"src": []
												},
												{
													"key": "minutesRead",
													"value": "<integer>",
													"description": "(Required) Minutes to read the article",
													"type": "text"
												},
												{
													"key": "generalInfo",
													"value": "<string>",
													"description": "(Required) General information about the article",
													"type": "text"
												},
												{
													"key": "hashtags",
													"value": "<string>",
													"description": "(Required) List of hashtags associated with the article, as a comma-separated string",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/article/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"article",
												"create"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"message\": \"Article created successfully\"\n  }\n}"
								},
								{
									"name": "Article already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "<string>",
													"description": "(Required) The title of the article",
													"type": "text"
												},
												{
													"key": "description",
													"value": "<string>",
													"description": "(Required) The description of the article",
													"type": "text"
												},
												{
													"key": "image",
													"description": "(Required) The image file of the article",
													"type": "file",
													"src": []
												},
												{
													"key": "minutesRead",
													"value": "<integer>",
													"description": "(Required) Minutes to read the article",
													"type": "text"
												},
												{
													"key": "generalInfo",
													"value": "<string>",
													"description": "(Required) General information about the article",
													"type": "text"
												},
												{
													"key": "hashtags",
													"value": "<string>",
													"description": "(Required) List of hashtags associated with the article, as a comma-separated string",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/article/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"article",
												"create"
											]
										}
									},
									"status": "Found",
									"code": 302,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 302,\n    \"message\": \"Article already exists\"\n  }\n}"
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "<string>",
													"description": "(Required) The title of the article",
													"type": "text"
												},
												{
													"key": "description",
													"value": "<string>",
													"description": "(Required) The description of the article",
													"type": "text"
												},
												{
													"key": "image",
													"description": "(Required) The image file of the article",
													"type": "file",
													"src": []
												},
												{
													"key": "minutesRead",
													"value": "<integer>",
													"description": "(Required) Minutes to read the article",
													"type": "text"
												},
												{
													"key": "generalInfo",
													"value": "<string>",
													"description": "(Required) General information about the article",
													"type": "text"
												},
												{
													"key": "hashtags",
													"value": "<string>",
													"description": "(Required) List of hashtags associated with the article, as a comma-separated string",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/article/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"article",
												"create"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"title\": [\n      \"Title must be a string\"\n    ],\n    \"image\": [\n      \"Image is required\"\n    ],\n    \"description\": [\n      \"Description is required\"\n    ],\n    \"minutesRead\": [\n      \"Minutes read must be a number\"\n    ],\n    \"hashtags\": [\n      \"Hashtags must be an array\"\n    ]\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "get",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get article by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/article/get/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"article",
												"get",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Article ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Article retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/article/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"article",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"title\": \"Article Title\",\n    \"image\": \"https://example.com/image.jpg\",\n    \"description\": \"This is a description of the article.\",\n    \"minutesRead\": 5,\n    \"generalInfoFile\": \"media/articles-info/article.txt\",\n    \"hashtags\": [\n      \"tech\",\n      \"news\"\n    ],\n    \"createdAt\": 1622548800000,\n    \"updatedAt\": 1622548800000\n  }\n}"
										},
										{
											"name": "Invalid article ID",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/article/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"article",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 400,\n    \"message\": \"Invalid article ID\"\n  }\n}"
										},
										{
											"name": "Article not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/article/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"article",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Article not found\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all articles or filter by various criteria with pagination",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/article/get?title=<string>&description=<string>&minutesRead=<number>&generalInfo=<string>&hashtags=<string>&hashtags=<string>&page=1&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"article",
										"get"
									],
									"query": [
										{
											"key": "title",
											"value": "<string>",
											"description": "Filter by title (partial match)"
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "Filter by description (partial match)"
										},
										{
											"key": "minutesRead",
											"value": "<number>",
											"description": "Filter by minutes to read"
										},
										{
											"key": "generalInfo",
											"value": "<string>",
											"description": "Filter by general information (partial match)"
										},
										{
											"key": "hashtags",
											"value": "<string>",
											"description": "Filter by hashtags"
										},
										{
											"key": "hashtags",
											"value": "<string>",
											"description": "Filter by hashtags"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of items per page"
										}
									]
								}
							},
							"response": [
								{
									"name": "Articles retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/article/get?title=<string>&description=<string>&minutesRead=<number>&generalInfo=<string>&hashtags=<string>&page=1&limit=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"article",
												"get"
											],
											"query": [
												{
													"key": "title",
													"value": "<string>",
													"description": "Filter by title (partial match)"
												},
												{
													"key": "description",
													"value": "<string>",
													"description": "Filter by description (partial match)"
												},
												{
													"key": "minutesRead",
													"value": "<number>",
													"description": "Filter by minutes to read"
												},
												{
													"key": "generalInfo",
													"value": "<string>",
													"description": "Filter by general information (partial match)"
												},
												{
													"key": "hashtags",
													"value": "<string>",
													"description": "Filter by hashtags"
												},
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"total\": 100,\n    \"page\": 1,\n    \"limit\": 10,\n    \"data\": [\n      {\n        \"title\": \"Article Title\",\n        \"image\": \"https://example.com/image.jpg\",\n        \"description\": \"This is a description of the article.\",\n        \"minutesRead\": 5,\n        \"generalInfoFile\": \"media/articles-info/article.txt\",\n        \"hashtags\": [\n          \"tech\",\n          \"news\"\n        ],\n        \"createdAt\": 1622548800000,\n        \"updatedAt\": 1622548800000\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Articles not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/article/get?title=<string>&description=<string>&minutesRead=<number>&generalInfo=<string>&hashtags=<string>&page=1&limit=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"article",
												"get"
											],
											"query": [
												{
													"key": "title",
													"value": "<string>",
													"description": "Filter by title (partial match)"
												},
												{
													"key": "description",
													"value": "<string>",
													"description": "Filter by description (partial match)"
												},
												{
													"key": "minutesRead",
													"value": "<number>",
													"description": "Filter by minutes to read"
												},
												{
													"key": "generalInfo",
													"value": "<string>",
													"description": "Filter by general information (partial match)"
												},
												{
													"key": "hashtags",
													"value": "<string>",
													"description": "Filter by hashtags"
												},
												{
													"key": "page",
													"value": "1",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Number of items per page"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Articles not found\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "hashtags",
					"item": [
						{
							"name": "Get all unique hashtags",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/article/hashtags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"article",
										"hashtags"
									]
								}
							},
							"response": [
								{
									"name": "Hashtags retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/article/hashtags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"article",
												"hashtags"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": [\n    \"tech\",\n    \"news\",\n    \"education\"\n  ]\n}"
								},
								{
									"name": "Failed to retrieve hashtags",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/article/hashtags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"article",
												"hashtags"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"error\": \"Failed to retrieve hashtags\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "update",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Update article by ID",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "<string>",
													"description": "The title of the article",
													"type": "text"
												},
												{
													"key": "description",
													"value": "<string>",
													"description": "The description of the article",
													"type": "text"
												},
												{
													"key": "image",
													"description": "The image file of the article",
													"type": "file",
													"src": []
												},
												{
													"key": "minutesRead",
													"value": "<integer>",
													"description": "Minutes to read the article",
													"type": "text"
												},
												{
													"key": "generalInfo",
													"value": "<string>",
													"description": "General information about the article",
													"type": "text"
												},
												{
													"key": "hashtags",
													"value": "<string>,<string>",
													"description": "List of hashtags associated with the article",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/article/update/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"article",
												"update",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Article ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Article updated successfully",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "title",
															"value": "<string>",
															"description": "The title of the article",
															"type": "text"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "The description of the article",
															"type": "text"
														},
														{
															"key": "image",
															"description": "The image file of the article",
															"type": "file",
															"src": []
														},
														{
															"key": "minutesRead",
															"value": "<integer>",
															"description": "Minutes to read the article",
															"type": "text"
														},
														{
															"key": "generalInfo",
															"value": "<string>",
															"description": "General information about the article",
															"type": "text"
														},
														{
															"key": "hashtags",
															"value": "<string>,<string>",
															"description": "List of hashtags associated with the article",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/article/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"article",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"message\": \"Article updated successfully\"\n  }\n}"
										},
										{
											"name": "Article not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "title",
															"value": "<string>",
															"description": "The title of the article",
															"type": "text"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "The description of the article",
															"type": "text"
														},
														{
															"key": "image",
															"description": "The image file of the article",
															"type": "file",
															"src": []
														},
														{
															"key": "minutesRead",
															"value": "<integer>",
															"description": "Minutes to read the article",
															"type": "text"
														},
														{
															"key": "generalInfo",
															"value": "<string>",
															"description": "General information about the article",
															"type": "text"
														},
														{
															"key": "hashtags",
															"value": "<string>,<string>",
															"description": "List of hashtags associated with the article",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/article/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"article",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Article not found\"\n  }\n}"
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "title",
															"value": "<string>",
															"description": "The title of the article",
															"type": "text"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "The description of the article",
															"type": "text"
														},
														{
															"key": "image",
															"description": "The image file of the article",
															"type": "file",
															"src": []
														},
														{
															"key": "minutesRead",
															"value": "<integer>",
															"description": "Minutes to read the article",
															"type": "text"
														},
														{
															"key": "generalInfo",
															"value": "<string>",
															"description": "General information about the article",
															"type": "text"
														},
														{
															"key": "hashtags",
															"value": "<string>,<string>",
															"description": "List of hashtags associated with the article",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/article/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"article",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"title\": [\n      \"Title must be a string\"\n    ],\n    \"image\": [\n      \"Image must be a valid URL\"\n    ],\n    \"description\": [\n      \"Description must be a string\"\n    ],\n    \"minutesRead\": [\n      \"Minutes read must be a number\"\n    ],\n    \"hashtags\": [\n      \"Hashtags must be an array\"\n    ]\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete article by ID",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/article/delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"article",
												"delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Article ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Article deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/article/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"article",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"message\": \"Article deleted successfully\"\n  }\n}"
										},
										{
											"name": "Article not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/article/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"article",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Article not found\"\n  }\n}"
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/article/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"article",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"id\": [\n      \"Invalid article ID\"\n    ]\n  }\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "education-center",
			"item": [
				{
					"name": "create",
					"item": [
						{
							"name": "Create a new education center",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "<string>",
											"description": "(Required) The title of the education center",
											"type": "text"
										},
										{
											"key": "image",
											"description": "(Required) The image file of the education center",
											"type": "file",
											"src": []
										},
										{
											"key": "generalInfo",
											"value": "<string>",
											"description": "(Required) The general information about the education center",
											"type": "text"
										},
										{
											"key": "city",
											"value": "<string>",
											"description": "(Required) The city where the education center is located",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/education-center/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"education-center",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "Education center created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "<string>",
													"description": "(Required) The title of the education center",
													"type": "text"
												},
												{
													"key": "image",
													"description": "(Required) The image file of the education center",
													"type": "file",
													"src": []
												},
												{
													"key": "generalInfo",
													"value": "<string>",
													"description": "(Required) The general information about the education center",
													"type": "text"
												},
												{
													"key": "city",
													"value": "<string>",
													"description": "(Required) The city where the education center is located",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/education-center/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"education-center",
												"create"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"message\": \"Education center created successfully\"\n  }\n}"
								},
								{
									"name": "Education center already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "<string>",
													"description": "(Required) The title of the education center",
													"type": "text"
												},
												{
													"key": "image",
													"description": "(Required) The image file of the education center",
													"type": "file",
													"src": []
												},
												{
													"key": "generalInfo",
													"value": "<string>",
													"description": "(Required) The general information about the education center",
													"type": "text"
												},
												{
													"key": "city",
													"value": "<string>",
													"description": "(Required) The city where the education center is located",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/education-center/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"education-center",
												"create"
											]
										}
									},
									"status": "Found",
									"code": 302,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 302,\n    \"message\": \"Education center already exists\"\n  }\n}"
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "<string>",
													"description": "(Required) The title of the education center",
													"type": "text"
												},
												{
													"key": "image",
													"description": "(Required) The image file of the education center",
													"type": "file",
													"src": []
												},
												{
													"key": "generalInfo",
													"value": "<string>",
													"description": "(Required) The general information about the education center",
													"type": "text"
												},
												{
													"key": "city",
													"value": "<string>",
													"description": "(Required) The city where the education center is located",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/education-center/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"education-center",
												"create"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"title\": [\n      \"Title must be a string\"\n    ],\n    \"image\": [\n      \"Image is required\"\n    ],\n    \"generalInfo\": [\n      \"General info is required\"\n    ],\n    \"city\": [\n      \"City is required\"\n    ]\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "get",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get education center by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/education-center/get/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"education-center",
												"get",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Education center ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Education center retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/education-center/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"education-center",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"title\": \"Education Center Title\",\n    \"image\": \"https://example.com/image.jpg\",\n    \"generalInfoFile\": \"media/education-center-info/education-center.txt\",\n    \"city\": \"City Name\",\n    \"createdAt\": 1622548800000,\n    \"updatedAt\": 1622548800000\n  }\n}"
										},
										{
											"name": "Invalid education center ID",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/education-center/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"education-center",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 400,\n    \"message\": \"Invalid education center ID\"\n  }\n}"
										},
										{
											"name": "Education center not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/education-center/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"education-center",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Education center not found\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all education centers or filter by city",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/education-center/get?city=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"education-center",
										"get"
									],
									"query": [
										{
											"key": "city",
											"value": "<string>",
											"description": "Filter by city"
										}
									]
								}
							},
							"response": [
								{
									"name": "Education centers retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/education-center/get?city=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"education-center",
												"get"
											],
											"query": [
												{
													"key": "city",
													"value": "<string>",
													"description": "Filter by city"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": [\n    {\n      \"title\": \"Education Center Title\",\n      \"image\": \"https://example.com/image.jpg\",\n      \"generalInfoFile\": \"media/education-center-info/education-center.txt\",\n      \"city\": \"City Name\",\n      \"createdAt\": 1622548800000,\n      \"updatedAt\": 1622548800000\n    }\n  ]\n}"
								},
								{
									"name": "Education centers not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/education-center/get?city=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"education-center",
												"get"
											],
											"query": [
												{
													"key": "city",
													"value": "<string>",
													"description": "Filter by city"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Education centers not found\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "update",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Update education center by ID",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "<string>",
													"description": "The title of the education center",
													"type": "text"
												},
												{
													"key": "image",
													"description": "The image file of the education center",
													"type": "file",
													"src": []
												},
												{
													"key": "generalInfo",
													"value": "<string>",
													"description": "The general information about the education center",
													"type": "text"
												},
												{
													"key": "city",
													"value": "<string>",
													"description": "The city where the education center is located",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/education-center/update/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"education-center",
												"update",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Education center ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Education center updated successfully",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "title",
															"value": "<string>",
															"description": "The title of the education center",
															"type": "text"
														},
														{
															"key": "image",
															"description": "The image file of the education center",
															"type": "file",
															"src": []
														},
														{
															"key": "generalInfo",
															"value": "<string>",
															"description": "The general information about the education center",
															"type": "text"
														},
														{
															"key": "city",
															"value": "<string>",
															"description": "The city where the education center is located",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/education-center/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"education-center",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"message\": \"Education center updated successfully\"\n  }\n}"
										},
										{
											"name": "Education center not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "title",
															"value": "<string>",
															"description": "The title of the education center",
															"type": "text"
														},
														{
															"key": "image",
															"description": "The image file of the education center",
															"type": "file",
															"src": []
														},
														{
															"key": "generalInfo",
															"value": "<string>",
															"description": "The general information about the education center",
															"type": "text"
														},
														{
															"key": "city",
															"value": "<string>",
															"description": "The city where the education center is located",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/education-center/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"education-center",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Education center not found\"\n  }\n}"
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "title",
															"value": "<string>",
															"description": "The title of the education center",
															"type": "text"
														},
														{
															"key": "image",
															"description": "The image file of the education center",
															"type": "file",
															"src": []
														},
														{
															"key": "generalInfo",
															"value": "<string>",
															"description": "The general information about the education center",
															"type": "text"
														},
														{
															"key": "city",
															"value": "<string>",
															"description": "The city where the education center is located",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/education-center/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"education-center",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"title\": [\n      \"Title must be a string\"\n    ],\n    \"image\": [\n      \"Image must be a valid URL\"\n    ],\n    \"generalInfo\": [\n      \"General info must be a string\"\n    ],\n    \"city\": [\n      \"City must be a string\"\n    ]\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete education center by ID",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/education-center/delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"education-center",
												"delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Education center ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Education center deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/education-center/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"education-center",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"message\": \"Education center deleted successfully\"\n  }\n}"
										},
										{
											"name": "Education center not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/education-center/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"education-center",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Education center not found\"\n  }\n}"
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/education-center/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"education-center",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"id\": [\n      \"Invalid education center ID\"\n    ]\n  }\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "images",
			"item": [
				{
					"name": "upload",
					"item": [
						{
							"name": "Upload an image",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"reference #/components/schemas/ not found in the OpenAPI spec\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/images/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images",
										"upload"
									]
								}
							},
							"response": [
								{
									"name": "Image uploaded successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference #/components/schemas/ not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/images/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												"upload"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"cid\": \"QmT5NvUtoM5nX6eWyJ77zDeRDUcLBr5Y6z6B43qQJdYYa8\"\n  }\n}"
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference #/components/schemas/ not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/images/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												"upload"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"file\": [\n      \"file must be a valid format\"\n    ]\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "get",
					"item": [
						{
							"name": "{cid}",
							"item": [
								{
									"name": "Get image by CID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/images/get/:cid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												"get",
												":cid"
											],
											"variable": [
												{
													"key": "cid"
												}
											]
										}
									},
									"response": [
										{
											"name": "Image retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/images/get/:cid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"images",
														"get",
														":cid"
													],
													"variable": [
														{
															"key": "cid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<binary>"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/images/get/:cid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"images",
														"get",
														":cid"
													],
													"variable": [
														{
															"key": "cid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 400,\n    \"message\": \"Invalid CID\"\n  }\n}"
										},
										{
											"name": "Image not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/images/get/:cid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"images",
														"get",
														":cid"
													],
													"variable": [
														{
															"key": "cid"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Image not found\"\n  }\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "partner",
			"item": [
				{
					"name": "create",
					"item": [
						{
							"name": "Create a new partner",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"description": "(Required) The image file for the partner.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/partner/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"partner",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "Partner created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"description": "(Required) The image file for the partner.",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/partner/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partner",
												"create"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"message\": \"Partner created successfully\"\n  }\n}"
								},
								{
									"name": "Partner already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"description": "(Required) The image file for the partner.",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/partner/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partner",
												"create"
											]
										}
									},
									"status": "Found",
									"code": 302,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 302,\n    \"message\": \"Partner already exists\"\n  }\n}"
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"description": "(Required) The image file for the partner.",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/partner/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partner",
												"create"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"image\": [\n      \"image must be a valid URL\"\n    ]\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "get",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get partner by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/partner/get/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partner",
												"get",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Partner ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Partner retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/partner/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"partner",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"image\": \"https://example.com/image1.jpg\",\n    \"createdAt\": 1622548800000,\n    \"deletedAt\": 0\n  }\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/partner/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"partner",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 400,\n    \"message\": \"Invalid partner ID\"\n  }\n}"
										},
										{
											"name": "Partner not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/partner/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"partner",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Partner not found\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all partners with optional filters and pagination",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/partner/get?limit=<number>&page=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"partner",
										"get"
									],
									"query": [
										{
											"key": "limit",
											"value": "<number>",
											"description": "Number of items per page"
										},
										{
											"key": "page",
											"value": "<number>",
											"description": "Page number for pagination"
										}
									]
								}
							},
							"response": [
								{
									"name": "Partners retrieved successfully with pagination details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/partner/get?limit=<number>&page=<number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partner",
												"get"
											],
											"query": [
												{
													"key": "limit",
													"value": "<number>",
													"description": "Number of items per page"
												},
												{
													"key": "page",
													"value": "<number>",
													"description": "Page number for pagination"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"total\": 11,\n    \"page\": 1,\n    \"limit\": 10,\n    \"data\": [\n      {\n        \"image\": \"https://example.com/image1.jpg\",\n        \"createdAt\": 1622548800000,\n        \"deletedAt\": 0\n      },\n      {\n        \"image\": \"https://example.com/image2.jpg\",\n        \"createdAt\": 1622548800000,\n        \"deletedAt\": 0\n      }\n    ]\n  }\n}"
								},
								{
									"name": "No partners found matching the filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/partner/get?limit=<number>&page=<number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partner",
												"get"
											],
											"query": [
												{
													"key": "limit",
													"value": "<number>",
													"description": "Number of items per page"
												},
												{
													"key": "page",
													"value": "<number>",
													"description": "Page number for pagination"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"No partners found\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "update",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Update partner by ID",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"description": "(Required) The updated image file for the partner.",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/partner/update/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partner",
												"update",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Partner ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Partner updated successfully",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "image",
															"description": "(Required) The updated image file for the partner.",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/partner/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"partner",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"message\": \"Partner updated successfully\"\n  }\n}"
										},
										{
											"name": "Partner not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "image",
															"description": "(Required) The updated image file for the partner.",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/partner/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"partner",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Partner not found\"\n  }\n}"
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "image",
															"description": "(Required) The updated image file for the partner.",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/partner/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"partner",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"image\": [\n      \"image must be a valid URL\"\n    ]\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete partner by ID",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/partner/delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partner",
												"delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Partner ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Partner deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/partner/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"partner",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"message\": \"Partner deleted successfully\"\n  }\n}"
										},
										{
											"name": "Partner not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/partner/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"partner",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Partner not found\"\n  }\n}"
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/partner/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"partner",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"id\": [\n      \"Invalid partner ID\"\n    ]\n  }\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "result-modal",
			"item": [
				{
					"name": "Process result modal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"first\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"second\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"third\": \"<string>\",\n  \"fourth\": \"<string>\",\n  \"fifth\": \"<string>\",\n  \"sixth\": \"<string>\",\n  \"seventh\": \"<string>\",\n  \"time_spent\": \"<number>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/result-modal",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"result-modal"
							]
						}
					},
					"response": [
						{
							"name": "Result modal processed successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"first\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"second\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"third\": \"<string>\",\n  \"fourth\": \"<string>\",\n  \"fifth\": \"<string>\",\n  \"sixth\": \"<string>\",\n  \"seventh\": \"<string>\",\n  \"time_spent\": \"<number>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/result-modal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"result-modal"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"message\": \"Result modal processed successfully\",\n    \"payload\": {}\n  }\n}"
						},
						{
							"name": "Invalid or missing token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"first\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"second\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"third\": \"<string>\",\n  \"fourth\": \"<string>\",\n  \"fifth\": \"<string>\",\n  \"sixth\": \"<string>\",\n  \"seventh\": \"<string>\",\n  \"time_spent\": \"<number>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/result-modal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"result-modal"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"statusCode\": 401,\n    \"message\": \"Invalid token\"\n  }\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"first\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"second\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"third\": \"<string>\",\n  \"fourth\": \"<string>\",\n  \"fifth\": \"<string>\",\n  \"sixth\": \"<string>\",\n  \"seventh\": \"<string>\",\n  \"time_spent\": \"<number>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/result-modal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"result-modal"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"statusCode\": 500,\n    \"message\": \"Error message\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "specialty",
			"item": [
				{
					"name": "create",
					"item": [
						{
							"name": "Create a new specialty",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"EIOHPE\": \"<string>\",\n  \"class\": \"<number>\",\n  \"specializationGroup\": \"<number>\",\n  \"clusterName\": \"<string>\",\n  \"clusterTag\": \"<string>\",\n  \"specialtyDescription\": \"<string>\",\n  \"specialtyCode\": \"<number>\",\n  \"specialtyName\": \"<string>\",\n  \"formOfEducation\": \"<string>\",\n  \"typeOfStudy\": \"<string>\",\n  \"languageOfStudy\": \"<string>\",\n  \"universityName\": \"<string>\",\n  \"monthlyIncome\": \"<number>\",\n  \"skillsLevel\": \"<number>\",\n  \"futureGrowth\": \"<string>\",\n  \"overview\": \"<string>\",\n  \"careerOpportunities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/specialty/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialty",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "Specialty created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"EIOHPE\": \"<string>\",\n  \"class\": \"<number>\",\n  \"specializationGroup\": \"<number>\",\n  \"clusterName\": \"<string>\",\n  \"clusterTag\": \"<string>\",\n  \"specialtyDescription\": \"<string>\",\n  \"specialtyCode\": \"<number>\",\n  \"specialtyName\": \"<string>\",\n  \"formOfEducation\": \"<string>\",\n  \"typeOfStudy\": \"<string>\",\n  \"languageOfStudy\": \"<string>\",\n  \"universityName\": \"<string>\",\n  \"monthlyIncome\": \"<number>\",\n  \"skillsLevel\": \"<number>\",\n  \"futureGrowth\": \"<string>\",\n  \"overview\": \"<string>\",\n  \"careerOpportunities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/specialty/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialty",
												"create"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"message\": \"Specialty created successfully\"\n  }\n}"
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"EIOHPE\": \"<string>\",\n  \"class\": \"<number>\",\n  \"specializationGroup\": \"<number>\",\n  \"clusterName\": \"<string>\",\n  \"clusterTag\": \"<string>\",\n  \"specialtyDescription\": \"<string>\",\n  \"specialtyCode\": \"<number>\",\n  \"specialtyName\": \"<string>\",\n  \"formOfEducation\": \"<string>\",\n  \"typeOfStudy\": \"<string>\",\n  \"languageOfStudy\": \"<string>\",\n  \"universityName\": \"<string>\",\n  \"monthlyIncome\": \"<number>\",\n  \"skillsLevel\": \"<number>\",\n  \"futureGrowth\": \"<string>\",\n  \"overview\": \"<string>\",\n  \"careerOpportunities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/specialty/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialty",
												"create"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"name\": [\n      \"name must be a string\"\n    ]\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "get",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get specialty by ID or all specialties",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/specialty/get/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialty",
												"get",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "Specialty ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Specialty(s) retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/specialty/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"specialty",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": [\n    {\n      \"name\": \"Specialty 1\"\n    },\n    {\n      \"name\": \"Specialty 2\"\n    }\n  ]\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/specialty/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"specialty",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 400,\n    \"message\": \"Invalid specialty ID\"\n  }\n}"
										},
										{
											"name": "Specialty not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/specialty/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"specialty",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Specialty not found\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get specialty by ID or all specialties",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/specialty/get",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialty",
										"get"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Specialty ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Specialty(s) retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/specialty/get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialty",
												"get"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": [\n    {\n      \"name\": \"Specialty 1\"\n    },\n    {\n      \"name\": \"Specialty 2\"\n    }\n  ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/specialty/get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialty",
												"get"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 400,\n    \"message\": \"Invalid specialty ID\"\n  }\n}"
								},
								{
									"name": "Specialty not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/specialty/get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialty",
												"get"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Specialty not found\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "filter",
					"item": [
						{
							"name": "Filter specialties based on criteria",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/specialty/filter?page=<number>&limit=<number>&name=<string>&class=<number>&specializationGroup=<number>&clusterName=<string>&clusterTag=<string>&specialtyCode=<number>&specialtyName=<string>&formOfEducation=<string>&typeOfStudy=<string>&languageOfStudy=<string>&universityName=<string>&monthlyIncome=<number>&careerOpportunities=<array>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialty",
										"filter"
									],
									"query": [
										{
											"key": "page",
											"value": "<number>",
											"description": "(Required) "
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "(Required) "
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the specialty"
										},
										{
											"key": "class",
											"value": "<number>",
											"description": "The class level of the specialty"
										},
										{
											"key": "specializationGroup",
											"value": "<number>",
											"description": "The specialization group of the specialty"
										},
										{
											"key": "clusterName",
											"value": "<string>",
											"description": "The cluster name of the specialty"
										},
										{
											"key": "clusterTag",
											"value": "<string>",
											"description": "The cluster tag of the specialty"
										},
										{
											"key": "specialtyCode",
											"value": "<number>",
											"description": "The specialty code"
										},
										{
											"key": "specialtyName",
											"value": "<string>",
											"description": "The name of the specialty"
										},
										{
											"key": "formOfEducation",
											"value": "<string>",
											"description": "The form of education"
										},
										{
											"key": "typeOfStudy",
											"value": "<string>",
											"description": "The type of study"
										},
										{
											"key": "languageOfStudy",
											"value": "<string>",
											"description": "The language of study"
										},
										{
											"key": "universityName",
											"value": "<string>",
											"description": "The university name"
										},
										{
											"key": "monthlyIncome",
											"value": "<number>",
											"description": "The monthly income from the specialty"
										},
										{
											"key": "careerOpportunities",
											"value": "<array>",
											"description": "Career opportunities available"
										}
									]
								}
							},
							"response": [
								{
									"name": "Filtered specialties retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/specialty/filter?page=<number>&limit=<number>&name=<string>&class=<number>&specializationGroup=<number>&clusterName=<string>&clusterTag=<string>&specialtyCode=<number>&specialtyName=<string>&formOfEducation=<string>&typeOfStudy=<string>&languageOfStudy=<string>&universityName=<string>&monthlyIncome=<number>&careerOpportunities=<array>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialty",
												"filter"
											],
											"query": [
												{
													"key": "page",
													"value": "<number>",
													"description": "(Required) "
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "(Required) "
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "The name of the specialty"
												},
												{
													"key": "class",
													"value": "<number>",
													"description": "The class level of the specialty"
												},
												{
													"key": "specializationGroup",
													"value": "<number>",
													"description": "The specialization group of the specialty"
												},
												{
													"key": "clusterName",
													"value": "<string>",
													"description": "The cluster name of the specialty"
												},
												{
													"key": "clusterTag",
													"value": "<string>",
													"description": "The cluster tag of the specialty"
												},
												{
													"key": "specialtyCode",
													"value": "<number>",
													"description": "The specialty code"
												},
												{
													"key": "specialtyName",
													"value": "<string>",
													"description": "The name of the specialty"
												},
												{
													"key": "formOfEducation",
													"value": "<string>",
													"description": "The form of education"
												},
												{
													"key": "typeOfStudy",
													"value": "<string>",
													"description": "The type of study"
												},
												{
													"key": "languageOfStudy",
													"value": "<string>",
													"description": "The language of study"
												},
												{
													"key": "universityName",
													"value": "<string>",
													"description": "The university name"
												},
												{
													"key": "monthlyIncome",
													"value": "<number>",
													"description": "The monthly income from the specialty"
												},
												{
													"key": "careerOpportunities",
													"value": "<array>",
													"description": "Career opportunities available"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"data\": [\n      {\n        \"name\": \"Specialty 1\"\n      },\n      {\n        \"name\": \"Specialty 2\"\n      }\n    ],\n    \"total\": 2,\n    \"page\": 1,\n    \"limit\": 10\n  }\n}"
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/specialty/filter?page=<number>&limit=<number>&name=<string>&class=<number>&specializationGroup=<number>&clusterName=<string>&clusterTag=<string>&specialtyCode=<number>&specialtyName=<string>&formOfEducation=<string>&typeOfStudy=<string>&languageOfStudy=<string>&universityName=<string>&monthlyIncome=<number>&careerOpportunities=<array>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialty",
												"filter"
											],
											"query": [
												{
													"key": "page",
													"value": "<number>",
													"description": "(Required) "
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "(Required) "
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "The name of the specialty"
												},
												{
													"key": "class",
													"value": "<number>",
													"description": "The class level of the specialty"
												},
												{
													"key": "specializationGroup",
													"value": "<number>",
													"description": "The specialization group of the specialty"
												},
												{
													"key": "clusterName",
													"value": "<string>",
													"description": "The cluster name of the specialty"
												},
												{
													"key": "clusterTag",
													"value": "<string>",
													"description": "The cluster tag of the specialty"
												},
												{
													"key": "specialtyCode",
													"value": "<number>",
													"description": "The specialty code"
												},
												{
													"key": "specialtyName",
													"value": "<string>",
													"description": "The name of the specialty"
												},
												{
													"key": "formOfEducation",
													"value": "<string>",
													"description": "The form of education"
												},
												{
													"key": "typeOfStudy",
													"value": "<string>",
													"description": "The type of study"
												},
												{
													"key": "languageOfStudy",
													"value": "<string>",
													"description": "The language of study"
												},
												{
													"key": "universityName",
													"value": "<string>",
													"description": "The university name"
												},
												{
													"key": "monthlyIncome",
													"value": "<number>",
													"description": "The monthly income from the specialty"
												},
												{
													"key": "careerOpportunities",
													"value": "<array>",
													"description": "Career opportunities available"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"name\": [\n      \"name must be a string\"\n    ]\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "update",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Update specialty by ID",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"EIOHPE\": \"<string>\",\n  \"class\": \"<number>\",\n  \"specializationGroup\": \"<number>\",\n  \"clusterName\": \"<string>\",\n  \"clusterTag\": \"<string>\",\n  \"specialtyDescription\": \"<string>\",\n  \"specialtyCode\": \"<number>\",\n  \"specialtyName\": \"<string>\",\n  \"formOfEducation\": \"<string>\",\n  \"typeOfStudy\": \"<string>\",\n  \"languageOfStudy\": \"<string>\",\n  \"universityName\": \"<string>\",\n  \"monthlyIncome\": \"<number>\",\n  \"skillsLevel\": \"<number>\",\n  \"futureGrowth\": \"<string>\",\n  \"overview\": \"<string>\",\n  \"careerOpportunities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/specialty/update/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialty",
												"update",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Specialty ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Specialty updated successfully",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"EIOHPE\": \"<string>\",\n  \"class\": \"<number>\",\n  \"specializationGroup\": \"<number>\",\n  \"clusterName\": \"<string>\",\n  \"clusterTag\": \"<string>\",\n  \"specialtyDescription\": \"<string>\",\n  \"specialtyCode\": \"<number>\",\n  \"specialtyName\": \"<string>\",\n  \"formOfEducation\": \"<string>\",\n  \"typeOfStudy\": \"<string>\",\n  \"languageOfStudy\": \"<string>\",\n  \"universityName\": \"<string>\",\n  \"monthlyIncome\": \"<number>\",\n  \"skillsLevel\": \"<number>\",\n  \"futureGrowth\": \"<string>\",\n  \"overview\": \"<string>\",\n  \"careerOpportunities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/specialty/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"specialty",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"message\": \"Specialty updated successfully\"\n  }\n}"
										},
										{
											"name": "Specialty not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"EIOHPE\": \"<string>\",\n  \"class\": \"<number>\",\n  \"specializationGroup\": \"<number>\",\n  \"clusterName\": \"<string>\",\n  \"clusterTag\": \"<string>\",\n  \"specialtyDescription\": \"<string>\",\n  \"specialtyCode\": \"<number>\",\n  \"specialtyName\": \"<string>\",\n  \"formOfEducation\": \"<string>\",\n  \"typeOfStudy\": \"<string>\",\n  \"languageOfStudy\": \"<string>\",\n  \"universityName\": \"<string>\",\n  \"monthlyIncome\": \"<number>\",\n  \"skillsLevel\": \"<number>\",\n  \"futureGrowth\": \"<string>\",\n  \"overview\": \"<string>\",\n  \"careerOpportunities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/specialty/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"specialty",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Specialty not found\"\n  }\n}"
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"EIOHPE\": \"<string>\",\n  \"class\": \"<number>\",\n  \"specializationGroup\": \"<number>\",\n  \"clusterName\": \"<string>\",\n  \"clusterTag\": \"<string>\",\n  \"specialtyDescription\": \"<string>\",\n  \"specialtyCode\": \"<number>\",\n  \"specialtyName\": \"<string>\",\n  \"formOfEducation\": \"<string>\",\n  \"typeOfStudy\": \"<string>\",\n  \"languageOfStudy\": \"<string>\",\n  \"universityName\": \"<string>\",\n  \"monthlyIncome\": \"<number>\",\n  \"skillsLevel\": \"<number>\",\n  \"futureGrowth\": \"<string>\",\n  \"overview\": \"<string>\",\n  \"careerOpportunities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/specialty/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"specialty",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"name\": [\n      \"name must be a string\"\n    ]\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete specialty by ID",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/specialty/delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialty",
												"delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Specialty ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Specialty deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/specialty/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"specialty",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"message\": \"Specialty deleted successfully\"\n  }\n}"
										},
										{
											"name": "Specialty not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/specialty/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"specialty",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Specialty not found\"\n  }\n}"
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/specialty/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"specialty",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"id\": [\n      \"Invalid specialty ID\"\n    ]\n  }\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "university",
			"item": [
				{
					"name": "create",
					"item": [
						{
							"name": "Create a new university",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"city\": \"<string>\",\n  \"generalInfo\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/university/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"university",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "University registered successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"city\": \"<string>\",\n  \"generalInfo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/university/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"university",
												"create"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"message\": \"University registered successfully\"\n  }\n}"
								},
								{
									"name": "University already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"city\": \"<string>\",\n  \"generalInfo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/university/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"university",
												"create"
											]
										}
									},
									"status": "Found",
									"code": 302,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 302,\n    \"message\": \"University already exists\"\n  }\n}"
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"city\": \"<string>\",\n  \"generalInfo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/university/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"university",
												"create"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"name\": [\n      \"name must be a string\"\n    ],\n    \"address\": [\n      \"address must be a string\"\n    ],\n    \"contactEmail\": [\n      \"contactEmail must be a valid email address\"\n    ]\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "get",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get university by ID or all universities",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/university/get/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"university",
												"get",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "University ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "University(s) retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/university/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"university",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": [\n    {\n      \"name\": \"Harvard University\",\n      \"address\": \"Cambridge, MA\",\n      \"contactEmail\": \"info@harvard.edu\",\n      \"generalInfo\": \"media/university-info/harvard.txt\",\n      \"createdAt\": 1622548800000,\n      \"updatedAt\": 1622548800000\n    },\n    {\n      \"name\": \"Stanford University\",\n      \"address\": \"Stanford, CA\",\n      \"contactEmail\": \"info@stanford.edu\",\n      \"generalInfo\": \"media/university-info/stanford.txt\",\n      \"createdAt\": 1622548800000,\n      \"updatedAt\": 1622548800000\n    }\n  ]\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/university/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"university",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 400,\n    \"message\": \"Invalid university ID\"\n  }\n}"
										},
										{
											"name": "University not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/university/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"university",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"University not found\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get university by ID or all universities",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/university/get",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"university",
										"get"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "University ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "University(s) retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/university/get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"university",
												"get"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": [\n    {\n      \"name\": \"Harvard University\",\n      \"address\": \"Cambridge, MA\",\n      \"contactEmail\": \"info@harvard.edu\",\n      \"generalInfo\": \"media/university-info/harvard.txt\",\n      \"createdAt\": 1622548800000,\n      \"updatedAt\": 1622548800000\n    },\n    {\n      \"name\": \"Stanford University\",\n      \"address\": \"Stanford, CA\",\n      \"contactEmail\": \"info@stanford.edu\",\n      \"generalInfo\": \"media/university-info/stanford.txt\",\n      \"createdAt\": 1622548800000,\n      \"updatedAt\": 1622548800000\n    }\n  ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/university/get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"university",
												"get"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 400,\n    \"message\": \"Invalid university ID\"\n  }\n}"
								},
								{
									"name": "University not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/university/get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"university",
												"get"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"University not found\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "update",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Update university by ID",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"city\": \"<string>\",\n  \"generalInfo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/university/update/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"university",
												"update",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) University ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "University updated successfully",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"city\": \"<string>\",\n  \"generalInfo\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/university/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"university",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"message\": \"University updated successfully\"\n  }\n}"
										},
										{
											"name": "University not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"city\": \"<string>\",\n  \"generalInfo\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/university/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"university",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"University not found\"\n  }\n}"
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"city\": \"<string>\",\n  \"generalInfo\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/university/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"university",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"name\": [\n      \"name must be a string\"\n    ],\n    \"address\": [\n      \"address must be a string\"\n    ],\n    \"contactEmail\": [\n      \"contactEmail must be a valid email address\"\n    ]\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete university by ID",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/university/delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"university",
												"delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) University ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "University deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/university/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"university",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"message\": \"University deleted successfully\"\n  }\n}"
										},
										{
											"name": "University not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/university/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"university",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"University not found\"\n  }\n}"
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/university/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"university",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"id\": [\n      \"Invalid university ID\"\n    ]\n  }\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "create",
					"item": [
						{
							"name": "Create a new user",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"surname\": \"<string>\",\n  \"gender\": \"female\",\n  \"role\": \"student\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"patronymic\": \"<string>\",\n  \"age\": \"<number>\",\n  \"district\": \"Baljuvon\",\n  \"school\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "User created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"surname\": \"<string>\",\n  \"gender\": \"female\",\n  \"role\": \"student\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"patronymic\": \"<string>\",\n  \"age\": \"<number>\",\n  \"district\": \"Baljuvon\",\n  \"school\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"create"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"message\": \"User created successfully\"\n  }\n}"
								},
								{
									"name": "User already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"surname\": \"<string>\",\n  \"gender\": \"female\",\n  \"role\": \"student\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"patronymic\": \"<string>\",\n  \"age\": \"<number>\",\n  \"district\": \"Baljuvon\",\n  \"school\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"create"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 409,\n    \"message\": \"User already exists\"\n  }\n}"
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"surname\": \"<string>\",\n  \"gender\": \"female\",\n  \"role\": \"student\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"patronymic\": \"<string>\",\n  \"age\": \"<number>\",\n  \"district\": \"Baljuvon\",\n  \"school\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"create"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"name\": [\n      \"Name is required\"\n    ],\n    \"surname\": [\n      \"Surname is required\"\n    ],\n    \"email\": [\n      \"Email must be a valid email\"\n    ],\n    \"password\": [\n      \"Password is required\"\n    ],\n    \"role\": [\n      \"Role must be either student, teacher, or parents\"\n    ]\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "get",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get user by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/get/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"get",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) User ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "User retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"name\": \"John\",\n    \"surname\": \"Doe\",\n    \"patronymic\": \"Middle\",\n    \"gender\": \"male\",\n    \"age\": 30,\n    \"district\": \"Dushanbe\",\n    \"role\": \"student\",\n    \"school\": \"High School\",\n    \"email\": \"john.doe@example.com\",\n    \"createdAt\": 1622548800000,\n    \"updatedAt\": 1622548800000\n  }\n}"
										},
										{
											"name": "Invalid user ID",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 400,\n    \"message\": \"Invalid user ID\"\n  }\n}"
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"User not found\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all users or filter by various criteria with pagination",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/get?name=<string>&surname=<string>&gender=male&age=<number>&district=Kuhistoni Mastchoh&role=student&email=<string>&page=<number>&limit=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"get"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by name (partial match)"
										},
										{
											"key": "surname",
											"value": "<string>",
											"description": "Filter by surname (partial match)"
										},
										{
											"key": "gender",
											"value": "male",
											"description": "Filter by gender"
										},
										{
											"key": "age",
											"value": "<number>",
											"description": "Filter by age"
										},
										{
											"key": "district",
											"value": "Kuhistoni Mastchoh",
											"description": "Filter by district"
										},
										{
											"key": "role",
											"value": "student",
											"description": "Filter by role"
										},
										{
											"key": "email",
											"value": "<string>",
											"description": "Filter by email (partial match)"
										},
										{
											"key": "page",
											"value": "<number>",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Number of items per page"
										}
									]
								}
							},
							"response": [
								{
									"name": "Users retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/get?name=<string>&surname=<string>&gender=male&age=<number>&district=Kuhistoni Mastchoh&role=student&email=<string>&page=<number>&limit=<number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"get"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by name (partial match)"
												},
												{
													"key": "surname",
													"value": "<string>",
													"description": "Filter by surname (partial match)"
												},
												{
													"key": "gender",
													"value": "male",
													"description": "Filter by gender"
												},
												{
													"key": "age",
													"value": "<number>",
													"description": "Filter by age"
												},
												{
													"key": "district",
													"value": "Kuhistoni Mastchoh",
													"description": "Filter by district"
												},
												{
													"key": "role",
													"value": "student",
													"description": "Filter by role"
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "Filter by email (partial match)"
												},
												{
													"key": "page",
													"value": "<number>",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Number of items per page"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"total\": 100,\n    \"page\": 1,\n    \"limit\": 10,\n    \"data\": [\n      {\n        \"name\": \"John\",\n        \"surname\": \"Doe\",\n        \"patronymic\": \"Middle\",\n        \"gender\": \"male\",\n        \"age\": 30,\n        \"district\": \"Dushanbe\",\n        \"role\": \"student\",\n        \"school\": \"High School\",\n        \"email\": \"john.doe@example.com\",\n        \"createdAt\": 1622548800000,\n        \"updatedAt\": 1622548800000\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Users not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/get?name=<string>&surname=<string>&gender=male&age=<number>&district=Kuhistoni Mastchoh&role=student&email=<string>&page=<number>&limit=<number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"get"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by name (partial match)"
												},
												{
													"key": "surname",
													"value": "<string>",
													"description": "Filter by surname (partial match)"
												},
												{
													"key": "gender",
													"value": "male",
													"description": "Filter by gender"
												},
												{
													"key": "age",
													"value": "<number>",
													"description": "Filter by age"
												},
												{
													"key": "district",
													"value": "Kuhistoni Mastchoh",
													"description": "Filter by district"
												},
												{
													"key": "role",
													"value": "student",
													"description": "Filter by role"
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "Filter by email (partial match)"
												},
												{
													"key": "page",
													"value": "<number>",
													"description": "Page number for pagination"
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Number of items per page"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"Users not found\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "update",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Update user by ID",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"surname\": \"<string>\",\n  \"patronymic\": \"<string>\",\n  \"gender\": \"male\",\n  \"age\": \"<number>\",\n  \"district\": \"Kulob\",\n  \"role\": \"parents\",\n  \"school\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/update/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"update",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) User ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "User updated successfully",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"surname\": \"<string>\",\n  \"patronymic\": \"<string>\",\n  \"gender\": \"male\",\n  \"age\": \"<number>\",\n  \"district\": \"Kulob\",\n  \"role\": \"parents\",\n  \"school\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"message\": \"User updated successfully\"\n  }\n}"
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"surname\": \"<string>\",\n  \"patronymic\": \"<string>\",\n  \"gender\": \"male\",\n  \"age\": \"<number>\",\n  \"district\": \"Kulob\",\n  \"role\": \"parents\",\n  \"school\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"User not found\"\n  }\n}"
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"surname\": \"<string>\",\n  \"patronymic\": \"<string>\",\n  \"gender\": \"male\",\n  \"age\": \"<number>\",\n  \"district\": \"Kulob\",\n  \"role\": \"parents\",\n  \"school\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"name\": [\n      \"Name must be a string\"\n    ],\n    \"email\": [\n      \"Email must be a valid email\"\n    ],\n    \"role\": [\n      \"Role must be either student, teacher, or parents\"\n    ]\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete user by ID",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) User ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "User deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"message\": \"User deleted successfully\"\n  }\n}"
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"statusCode\": 404,\n    \"message\": \"User not found\"\n  }\n}"
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"id\": [\n      \"Invalid user ID\"\n    ]\n  }\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/"
		}
	]
}