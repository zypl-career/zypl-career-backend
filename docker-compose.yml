version: '3.8'

services:
  postgres:
    image: 'postgres:14.2'
    container_name: 'career-postgres'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: 'career'
      POSTGRES_PASSWORD: 'career!'
      POSTGRES_DB: 'career'
    volumes:
      - career-postgres-data:/var/lib/postgresql/data

  back:
    build:
      context: ./server 
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000']
      interval: 30s
      timeout: 10s
      retries: 3

  ai:
    build:
      context: ./ai
      dockerfile: Dockerfile
    ports:
      - '8887:8887'
    volumes:
      - ./ai:/app
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=development
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8887']
      interval: 30s
      retries: 3
    depends_on:
      - back

  nginx_prod:
    container_name: 'nginx_prod'
    image: nginx:latest
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - back
      - certbot

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done;'"
    depends_on:
      - back

volumes:
  career-postgres-data:
    external: true
