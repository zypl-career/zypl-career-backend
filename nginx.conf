worker_processes auto;  # Use all available CPU cores

events {
    worker_connections 4096;  # Increase worker connections
    multi_accept on;  # Accept as many connections as possible
    use epoll;  # Use efficient I/O model (for Linux)
}

http {
    server {
        listen 80;
        server_name 34.143.150.148;

        location / {
            proxy_pass http://back:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Optimize buffering and caching for performance
            proxy_buffering on;
            proxy_buffers 8 16k;
            proxy_buffer_size 32k;
            proxy_busy_buffers_size 64k;
            proxy_temp_file_write_size 64k;
            proxy_cache_lock on;
            proxy_cache_revalidate on;

            # Timeouts to avoid slow responses
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            send_timeout 10s;
        }
    }

    # Increase buffer sizes
    client_max_body_size 100m;
    client_body_buffer_size 128k;
    large_client_header_buffers 4 16k;

    # Compression settings
    gzip on;
    gzip_min_length 10240;  # Only compress responses larger than 10KB
    gzip_buffers 16 8k;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Add more optimizations if needed
}
